{"question": "What is the product name for SKU with ID 1009AA?", "sql": "SELECT sku_name FROM skus WHERE sku_id = '1009AA'"}
{"question": "What is the city of the warehouse with code GUT930?", "sql": "SELECT city FROM warehouses WHERE warehouse_code = 'GUT930'"}
{"question": "What is the current inventory quantity for SKU 1009AA at warehouse AXW291?", "sql": "SELECT current_inventory_quantity FROM inventory WHERE sku_id = '1009AA' AND warehouse_id = 'AXW291'"}
{"question": "What is the order date for order number SO - 018900?", "sql": "SELECT order_date FROM sales WHERE order_number = 'SO - 018900'"}
{"question": "What is the unit price for SKU 1163CA at warehouse NXH382?", "sql": "SELECT unit_price FROM inventory WHERE sku_id = '1163CA' AND warehouse_id = 'NXH382'"}
{"question": "What is the customer type for order SO - 018926?","sql": "SELECT customer_type FROM sales WHERE order_number = 'SO - 018926'"}
{"question": "Show the total inventory value (total_value) for each vendor (vendor_name) across the entire warehouse system.","sql": "SELECT vendor_name,SUM(total_value) as total_inventory_value FROM inventory GROUP BY vendor_name ORDER BY total_inventory_value DESC;"}
{"question": "Display the average lead time (average_lead_time_days) of all products at each warehouse, sorted from lowest to highest.", "sql": "SELECT w.warehouse_code, w.city, w.country, AVG(i.average_lead_time_days) AS avg_lead_time FROM inventory i JOIN warehouses w ON i.warehouse_id = w.warehouse_code GROUP BY w.warehouse_code, w.city, w.country ORDER BY avg_lead_time ASC"}
{"question": "How many different SKUs are stored in each city? Show the city name and corresponding SKU count.","sql": "SELECT w.city, COUNT(DISTINCT i.sku_id) as sku_count FROM inventory i JOIN warehouses w ON i.warehouse_id = w.warehouse_code GROUP BY w.city ORDER BY sku_count DESC;"}
{"question": "Calculate the total revenue for each customer type (customer_type) in 2022.","sql": "SELECT customer_type, SUM(revenue) as total_revenue FROM sales WHERE EXTRACT(YEAR FROM order_date) = 2022 GROUP BY customer_type ORDER BY total_revenue DESC;"}
{"question": "Find all products with inventory value (total_value) greater than 500,500 , showing product name, warehouse location, and corresponding value.","sql": "SELECT s.sku_id, s.sku_name, w.warehouse_code, w.city, w.country, i.total_value, i.current_inventory_quantity, i.units FROM inventory i JOIN skus s ON i.sku_id = s.sku_id JOIN warehouses w ON i.warehouse_id = w.warehouse_code WHERE i.total_value > 500000 ORDER BY i.total_value DESC;"}
{"question": "Display the total quantity of products sold (order_quantity) in each province from January 2023 to July 2023","sql": "SELECT w.province, SUM(s.order_quantity) as total_quantity_sold, COUNT(s.order_number) as number_of_orders FROM sales s JOIN warehouses w ON s.warehouse_id = w.warehouse_code WHERE s.order_date BETWEEN '2023-01-01' AND '2023-07-30' GROUP BY w.province ORDER BY total_quantity_sold DESC;"}
{"question": "Show the number of different products (distinct SKUs) and total inventory quantity (sum of current_inventory_quantity) at each warehouse.","sql": "SELECT  w.warehouse_code, w.city, w.province, COUNT(DISTINCT i.sku_id) as distinct_skus, SUM(i.current_inventory_quantity) as total_inventory_quantity, STRING_AGG(DISTINCT i.units, ', ') as unit_types FROM inventory i JOIN warehouses w ON i.warehouse_id = w.warehouse_code GROUP BY w.warehouse_code, w.city, w.province ORDER BY distinct_skus DESC, total_inventory_quantity DESC;"}
{"question": "Calculate total revenue by month for 2022, identifying which month had the highest and lowest revenue.","sql": "SELECT\n    EXTRACT(MONTH FROM order_date) as month_number,\n    TO_CHAR(order_date, 'Month') as month_name,\n    TO_CHAR(SUM(revenue), 'FM999,999,999.00') as total_revenue\nFROM sales\nWHERE EXTRACT(YEAR FROM order_date) = 2022\nGROUP BY EXTRACT(MONTH FROM order_date), TO_CHAR(order_date, 'Month')\nORDER BY month_number;"}
{"question": "Find the top 5 best-selling SKUs (by quantity) for the first half of 2023 (January to June).","sql": "SELECT\n    s.sku_id,\n    sk.sku_name,\n    SUM(s.order_quantity) as total_quantity_sold,\n    COUNT(s.order_number) as number_of_orders,\n    TO_CHAR(SUM(s.revenue), 'FM999,999,999.00') as total_revenue\nFROM sales s\nJOIN skus sk ON s.sku_id = sk.sku_id\nWHERE s.order_date BETWEEN '2023-01-01' AND '2023-06-30'\nGROUP BY s.sku_id, sk.sku_name\nORDER BY total_quantity_sold DESC\nLIMIT 5;"}
{"question": "Show the average and maximum lead times for SKUs 1206BA, 1214CA, 1224AA, and 1234BA.","sql": "SELECT\n    i.sku_id,\n    s.sku_name,\n    i.average_lead_time_days,\n    i.maximum_lead_time_days,\n    i.vendor_name,\n    w.warehouse_code,\n    w.city\nFROM inventory i\nJOIN skus s ON i.sku_id = s.sku_id\nJOIN warehouses w ON i.warehouse_id = w.warehouse_code\nWHERE i.sku_id IN ('1206BA', '1214CA', '1224AA', '1234BA')\nORDER BY i.average_lead_time_days ASC;"}
{"question": "What is the daily sales velocity for all SKUs in the last 30 days?", "sql": "WITH date_range AS (SELECT (SELECT MAX(order_date) - INTERVAL '29 days' FROM sales) AS start_date, (SELECT MAX(order_date) FROM sales) AS end_date), sales_summary AS (SELECT s.sku_id, SUM(s.order_quantity)::numeric AS total_quantity FROM sales s CROSS JOIN date_range dr WHERE s.order_date BETWEEN dr.start_date AND dr.end_date GROUP BY s.sku_id) SELECT ss.sku_id, sk.sku_name, ss.total_quantity, 30 AS days_count, ROUND(ss.total_quantity / 30.0, 2) AS avg_daily_sales FROM sales_summary ss JOIN skus sk ON ss.sku_id = sk.sku_id ORDER BY avg_daily_sales DESC LIMIT 20;"}
{"question": "Show monthly sales velocity for all SKUs in 2023", "sql": "WITH date_range AS (SELECT '2023-01-01'::date AS start_date, '2023-07-30'::date AS end_date), months_in_period AS (SELECT EXTRACT(MONTH FROM AGE(end_date, start_date)) + 1 AS total_months FROM date_range), sales_summary AS (SELECT s.sku_id, SUM(s.order_quantity)::numeric AS total_quantity, COUNT(DISTINCT DATE_TRUNC('month', s.order_date)) AS active_months FROM sales s CROSS JOIN date_range dr WHERE s.order_date >= dr.start_date AND s.order_date <= dr.end_date GROUP BY s.sku_id) SELECT ss.sku_id, sk.sku_name, ss.total_quantity, ss.active_months, mip.total_months AS period_months, ROUND(ss.total_quantity / mip.total_months, 2) AS avg_monthly_velocity_period, ROUND(ss.total_quantity / NULLIF(ss.active_months, 0), 2) AS avg_monthly_velocity_active FROM sales_summary ss JOIN skus sk ON ss.sku_id = sk.sku_id CROSS JOIN months_in_period mip ORDER BY avg_monthly_velocity_period DESC LIMIT 20;"}
{"question": "Which SKUs have the highest daily sales velocity based on recent data?", "sql": "WITH recent_sales AS (SELECT s.sku_id, SUM(s.order_quantity) AS total_qty FROM sales s WHERE s.order_date >= '2023-07-01' AND s.order_date <= '2023-07-30' GROUP BY s.sku_id), current_stock AS (SELECT i.sku_id, SUM(i.current_inventory_quantity) AS total_stock FROM inventory i GROUP BY i.sku_id) SELECT rs.sku_id, sk.sku_name, rs.total_qty, ROUND(rs.total_qty / 30.0, 2) AS avg_daily_sales, cs.total_stock, CASE WHEN rs.total_qty > 0 THEN ROUND(cs.total_stock / (rs.total_qty / 30.0), 1) ELSE NULL END AS stock_cover_days FROM recent_sales rs JOIN skus sk ON rs.sku_id = sk.sku_id LEFT JOIN current_stock cs ON cs.sku_id = rs.sku_id ORDER BY avg_daily_sales DESC LIMIT 15;"}
{"question": "Calculate daily velocity for a specific SKU over the last 60 days", "sql": "WITH date_range AS (SELECT '2023-06-01'::date AS start_date, '2023-07-30'::date AS end_date), sales_data AS (SELECT SUM(order_quantity)::numeric AS total_quantity FROM sales WHERE sku_id = '1009AA' AND order_date BETWEEN (SELECT start_date FROM date_range) AND (SELECT end_date FROM date_range)) SELECT '1009AA' AS sku_id, sk.sku_name, sd.total_quantity, 60 AS days_count, ROUND(COALESCE(sd.total_quantity, 0) / 60.0, 2) AS avg_daily_sales FROM sales_data sd CROSS JOIN skus sk WHERE sk.sku_id = '1009AA';"}
{"question": "Show top performing SKUs by daily sales velocity", "sql": "WITH velocity_calc AS (SELECT s.sku_id, SUM(s.order_quantity) AS total_sold, COUNT(DISTINCT s.order_date) AS active_days FROM sales s WHERE s.order_date >= '2023-07-01' AND s.order_date <= '2023-07-30' GROUP BY s.sku_id HAVING COUNT(DISTINCT s.order_date) > 0) SELECT vc.sku_id, sk.sku_name, vc.total_sold, vc.active_days, ROUND(vc.total_sold / 30.0, 2) AS avg_daily_velocity, ROUND(vc.total_sold::numeric / vc.active_days, 2) AS avg_daily_velocity_active_days FROM velocity_calc vc JOIN skus sk ON vc.sku_id = sk.sku_id ORDER BY avg_daily_velocity DESC LIMIT 10;"}
{"question": "What is the monthly velocity for the first half of 2023?", "sql": "WITH monthly_sales AS (SELECT s.sku_id, DATE_TRUNC('month', s.order_date) AS sales_month, SUM(s.order_quantity)::numeric AS monthly_quantity FROM sales s WHERE s.order_date >= '2023-01-01' AND s.order_date <= '2023-06-30' GROUP BY s.sku_id, DATE_TRUNC('month', s.order_date)), sku_avg AS (SELECT ms.sku_id, COUNT(DISTINCT ms.sales_month) AS active_months, SUM(ms.monthly_quantity) AS total_quantity, ROUND(SUM(ms.monthly_quantity) / 6.0, 2) AS avg_monthly_sales FROM monthly_sales ms GROUP BY ms.sku_id) SELECT sa.sku_id, sk.sku_name, sa.total_quantity, sa.active_months, sa.avg_monthly_sales FROM sku_avg sa JOIN skus sk ON sa.sku_id = sk.sku_id ORDER BY avg_monthly_sales DESC LIMIT 15;"}
